@model integrador_moodle.Models.ViewModels.CadastroAlunoViewModel

@{
    ViewBag.Title = "Cadastrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!String.IsNullOrEmpty(ViewBag.errormessage))
{
<div class="alert alert-error">
    @ViewBag.errormessage   
</div>
}


@using (Html.BeginForm("Create", "Aluno", new { id = ViewBag.id }, FormMethod.Post, null))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Cadastrar</legend>

        <div class="editor"><label>
            Nome
        </label>
            @Html.TextBoxFor(model => model.nome, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.nome)
        </div>

        <div class="editor"><label>
            Sobrenome
        </label>
            @Html.TextBoxFor(model => model.sobrenome, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.sobrenome)
        </div>
        
        <div class="editor"><label>
            E-mail
        </label>
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>

         <div class="editor"><label>
            Senha
        </label>
            @Html.PasswordFor(model => model.senha)
            @Html.ValidationMessageFor(model => model.senha)
        </div>
        
        <div class="editor"><label>
            CPF
        </label>
            @Html.EditorFor(model => model.cpf)
            @Html.ValidationMessageFor(model => model.cpf)
        </div>

        <div class="editor"><label>
            Data de Nascimento
        </label>
            @Html.EditorFor(model => model.dataNascimento)
            @Html.ValidationMessageFor(model => model.dataNascimento)
        </div>

        <div class="editor"><label>
            Sexo
        </label>
            @Html.DropDownListFor(model => model.sexo,
                new List<SelectListItem>()
                {
                    new SelectListItem() {
                        Text = "Masculino",
                        Value = "1"
                    },
                    new SelectListItem() {
                        Text = "Feminino",
                        Value = "1"
                    },
                }
            )
            @Html.ValidationMessageFor(model => model.sexo)
        </div>
        
        <div class="editor"><label>
            Telefone
        </label>
            @Html.EditorFor(model => model.telefoneFixo)
            @Html.ValidationMessageFor(model => model.telefoneFixo)
        
        
            Celular
        
            @Html.EditorFor(model => model.celular)
            @Html.ValidationMessageFor(model => model.celular)
        </div>

        <div class="editor"><label>
            Endereço
        </label>
            @Html.TextBoxFor(model => model.endereco, new { @class = "input-xxlarge" })
            @Html.ValidationMessageFor(model => model.endereco)
        </div>

        <div class="editor"><label>
            Bairro
        </label>
            @Html.EditorFor(model => model.bairro)
            @Html.ValidationMessageFor(model => model.bairro)
        </div>

        <div class="editor"><label>
            Cidade
        </label>
            @Html.EditorFor(model => model.cidade)
            @Html.ValidationMessageFor(model => model.cidade)
        </div>

        <div class="editor"><label>
            CEP
        </label>
            @Html.EditorFor(model => model.cep)
            @Html.ValidationMessageFor(model => model.cep)
        </div>

        <div class="editor"><label>
            Estado
        </label>
            @Html.DropDownListFor(model => model.estado, new SelectList(ViewBag.estados, "Value", "Text"))
            @Html.ValidationMessageFor(model => model.estado)
        </div>

        <p id="button">
            <input type="submit" value="Salvar" class="btn" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
